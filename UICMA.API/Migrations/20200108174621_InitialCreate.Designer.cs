// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UICMA.Repository;

namespace UICMA.API.Migrations
{
    [DbContext(typeof(UICMAContext))]
    [Migration("20200108174621_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UICMA.Domain.Entities.Attendee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ScheduleId");

                    b.Property<long?>("ScheduleId1");

                    b.Property<int>("UserId");

                    b.Property<long?>("UserId1");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId1");

                    b.HasIndex("UserId1");

                    b.ToTable("Attendees");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2020, 1, 8, 23, 16, 20, 969, DateTimeKind.Local).AddTicks(7780));

                    b.Property<long?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2020, 1, 8, 23, 16, 20, 970, DateTimeKind.Local).AddTicks(9984));

                    b.Property<long?>("ModifierId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("Title");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(3);

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ModifierId");

                    b.ToTable("SCHEDULE_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<string>("Name");

                    b.Property<string>("Profession");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Attendee", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.Schedule", "Schedule")
                        .WithMany("Attendees")
                        .HasForeignKey("ScheduleId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UICMA.Domain.Entities.User", "User")
                        .WithMany("SchedulesAttended")
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.User", "Creator")
                        .WithMany("SchedulesCreated")
                        .HasForeignKey("CreatorId");

                    b.HasOne("UICMA.Domain.Entities.User", "Modifier")
                        .WithMany()
                        .HasForeignKey("ModifierId");
                });
#pragma warning restore 612, 618
        }
    }
}
