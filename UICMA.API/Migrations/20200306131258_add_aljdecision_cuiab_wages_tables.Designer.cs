// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UICMA.Repository;

namespace UICMA.API.Migrations
{
    [DbContext(typeof(UICMAContext))]
    [Migration("20200306131258_add_aljdecision_cuiab_wages_tables")]
    partial class add_aljdecision_cuiab_wages_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UICMA.Domain.Entities.ALJ_Decision.ALJDecision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ALJName")
                        .HasColumnName("ALJ_NAME");

                    b.Property<DateTime?>("ApplicationReopenDate")
                        .HasColumnName("APPLICATION_REOPEN_DATE");

                    b.Property<DateTime?>("BYBClaimDate")
                        .HasColumnName("BYB_CLAIM_DATE");

                    b.Property<string>("CaseNumber")
                        .HasColumnName("CASE_NUMBER");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("Decision")
                        .HasColumnName("DECISION");

                    b.Property<string>("EmployerInfo")
                        .HasColumnName("EMPLOYER_INFO");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("FormPath")
                        .HasColumnName("FORM_PATH");

                    b.Property<string>("FormerlyCaseNumber")
                        .HasColumnName("FORMERLY_CASE_NUMBER");

                    b.Property<DateTime?>("MailDate")
                        .HasColumnName("MAIL_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 174, DateTimeKind.Local).AddTicks(7547));

                    b.Property<string>("PartiesAppearing")
                        .HasColumnName("PARTIES_APPEARING");

                    b.Property<DateTime?>("PlaceOfHearingDate")
                        .HasColumnName("PLACE_OF_HEARING_DATE");

                    b.HasKey("Id")
                        .HasName("ALJ_DECISION_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("ALJ_DECISION_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Additional_Information.AdditionalInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClaimEffectiveDate")
                        .HasColumnName("CLAIM_EFFECTIVE_DATE");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("ControlNumber")
                        .HasColumnName("CONTROL_NUMBER");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("EmployerAddress")
                        .HasColumnName("EMPLOYER_ADDRESS");

                    b.Property<string>("EmployerName")
                        .HasColumnName("EMPLOYER_NAME");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("FormPath")
                        .HasColumnName("FORM_PATH");

                    b.Property<DateTime?>("MailDate")
                        .HasColumnName("MAIL_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 204, DateTimeKind.Local).AddTicks(6972));

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.HasKey("Id")
                        .HasName("ADDITIONAL_INFORMATION_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("ADDITIONAL_INFORMATION_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Associated_Documents.AssociatedDocuments", b =>
                {
                    b.Property<long>("FormId");

                    b.Property<long>("DocumentId");

                    b.HasKey("FormId", "DocumentId");

                    b.HasIndex("DocumentId");

                    b.ToTable("ASSOCIATED_DOCUMENTS_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Attendee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ScheduleId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("ATTENDEE_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.CUIAB_Acknowledgement.CUIABAcknowledgement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ABCaseNumber")
                        .HasColumnName("AB_CASE_NUMBER");

                    b.Property<string>("ALJDecisionNumber")
                        .HasColumnName("ALJ_DECISION_NUMBER");

                    b.Property<string>("AccountNumber")
                        .HasColumnName("ACCOUNT_NUMBER");

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Appellant")
                        .HasColumnName("APPELLANT");

                    b.Property<string>("CUIABAddress")
                        .HasColumnName("CUIAB_ADDRESS");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<DateTime?>("DateMailed")
                        .HasColumnName("DATE_MAILED");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("FormPath")
                        .HasColumnName("FORM_PATH");

                    b.Property<string>("LAUSDAddress")
                        .HasColumnName("LAUSD_ADDRESS");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 185, DateTimeKind.Local).AddTicks(8557));

                    b.HasKey("Id")
                        .HasName("CUIAB_ACKNOWLEDGEMENT_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("CUIAB_ACKNOWLEDGEMENT_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Appeal.ClaimAppeal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime?>("BYBClaimDate")
                        .HasColumnName("BYB_CLAIM_DATE");

                    b.Property<string>("City")
                        .HasColumnName("CITY");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("Date")
                        .HasColumnName("DATE");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<DateTime?>("FormDate")
                        .HasColumnName("FORM_DATE");

                    b.Property<string>("LAUSDAccountNumber")
                        .HasColumnName("LAUSD_ACCOUNT_NUMBER");

                    b.Property<string>("LAUSDEligibilityInformation")
                        .HasColumnName("LAUSD_ELIGIBILITY_INFORMATION");

                    b.Property<DateTime?>("LAUSDFaxDate")
                        .HasColumnName("LAUSD_FAX_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 130, DateTimeKind.Local).AddTicks(1282));

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("RepresentativeName")
                        .HasColumnName("REPRESENTATIVE_NAME");

                    b.Property<string>("Signature")
                        .HasColumnName("SIGNATURE");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.Property<string>("State")
                        .HasColumnName("STATE");

                    b.Property<string>("Title")
                        .HasColumnName("TITLE");

                    b.Property<string>("Zipcode")
                        .HasColumnName("ZIPCODE");

                    b.HasKey("Id")
                        .HasName("CLAIM_APPEAL_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("CLAIM_APPEAL_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Determination.ClaimDetermination", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BenefitYearBegan")
                        .HasColumnName("BENEFIT_YEAR_BEGAN");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("Decision")
                        .HasColumnName("DECISION");

                    b.Property<string>("FieldOffice")
                        .HasColumnName("FIELD_OFFICE");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("FormPath")
                        .HasColumnName("FORM_PATH");

                    b.Property<DateTime?>("MailedDate")
                        .HasColumnName("MAILED_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 112, DateTimeKind.Local).AddTicks(1791));

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.HasKey("Id")
                        .HasName("CLAIM_DETERMINATION_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("CLAIM_DETERMINATION_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Interview.ClaimInterview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime?>("BYBClaimDate")
                        .HasColumnName("BYB_CLAIM_DATE");

                    b.Property<string>("City")
                        .HasColumnName("CITY");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("DETInterviewer")
                        .HasColumnName("DET_INTERVIEWER");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnName("EFFECTIVE_DATE");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("InterviewerPhoneNumber")
                        .HasColumnName("INTERVIEWER_PHONE_NUMBER");

                    b.Property<long?>("IssuesList")
                        .HasColumnName("ISSUES_LIST");

                    b.Property<DateTime?>("LAUSDFaxDate")
                        .HasColumnName("LAUSD_FAX_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 94, DateTimeKind.Local).AddTicks(7368));

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<DateTime?>("RepresentativeDate")
                        .HasColumnName("REPRESENTATIVE_DATE");

                    b.Property<string>("RepresentativeName")
                        .HasColumnName("REPRESENTATIVE_NAME");

                    b.Property<string>("Signature")
                        .HasColumnName("SIGNATURE");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.Property<string>("State")
                        .HasColumnName("STATE");

                    b.Property<string>("Status")
                        .HasColumnName("STATUS");

                    b.Property<string>("Time")
                        .HasColumnName("TIME");

                    b.Property<string>("Title")
                        .HasColumnName("TITLE");

                    b.Property<string>("Zipcode")
                        .HasColumnName("ZIPCODE");

                    b.HasKey("Id")
                        .HasName("CLAIM_INTERVIEW_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("CLAIM_INTERVIEW_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Response.ClaimResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime?>("BYBClaimDate")
                        .HasColumnName("BYB_CLAIM_DATE");

                    b.Property<string>("City")
                        .HasColumnName("CITY");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnName("DUE_DATE");

                    b.Property<bool>("EEContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EE_CONTRACT")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("EffectiveDateOfClaim")
                        .HasColumnName("EFFECTIVE_DATE_OF_CLAIM");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<long?>("IssuesList")
                        .HasColumnName("ISSUES_LIST");

                    b.Property<DateTime?>("LAUSDMailDate")
                        .HasColumnName("LAUSD_MAIL_DATE");

                    b.Property<string>("LAUSDResponse")
                        .HasColumnName("LAUSD_RESPONSE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 81, DateTimeKind.Local).AddTicks(3305));

                    b.Property<bool>("OfferLetter")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OFFER_LETTER")
                        .HasDefaultValue(false);

                    b.Property<bool>("Other")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OTHER")
                        .HasDefaultValue(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<bool>("ProtestPage")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROTEST_PAGE")
                        .HasDefaultValue(false);

                    b.Property<bool>("RALetter")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RA_LETTER")
                        .HasDefaultValue(false);

                    b.Property<string>("RepresentativeName")
                        .HasColumnName("REPRESENTATIVE_NAME");

                    b.Property<string>("Signature")
                        .HasColumnName("SIGNATURE");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.Property<string>("State")
                        .HasColumnName("STATE");

                    b.Property<bool>("StatementOfCharges")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STATEMENT_OF_CHARGES")
                        .HasDefaultValue(false);

                    b.Property<bool>("SubCalender")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SUB_CALENDER")
                        .HasDefaultValue(false);

                    b.Property<bool>("TimeWageReport")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TIME_WAGE_REPORT")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .HasColumnName("TITLE");

                    b.Property<bool>("WarningLetters")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WARNING_LETTERS")
                        .HasDefaultValue(false);

                    b.Property<string>("Zipcode")
                        .HasColumnName("ZIPCODE");

                    b.HasKey("Id")
                        .HasName("CLAIM_RESPONSE_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("CLAIM_RESPONSE_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Form_Document.FormDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel");

                    b.Property<long>("ClaimId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<long>("DocumentId");

                    b.Property<long>("FormId");

                    b.Property<long?>("MDDocumentId");

                    b.Property<long?>("MDFormId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<DateTime?>("ReceivedDate");

                    b.Property<string>("UploadFileName");

                    b.HasKey("Id");

                    b.HasIndex("MDDocumentId");

                    b.HasIndex("MDFormId");

                    b.ToTable("FormDocument");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Issues_List.IssuesList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("IssueCode")
                        .HasColumnName("ISSUE_CODE");

                    b.Property<string>("IssueDecription")
                        .HasColumnName("ISSUE_DECRIPTION");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 148, DateTimeKind.Local).AddTicks(6161));

                    b.HasKey("Id")
                        .HasName("ISSUES_LIST_ID");

                    b.ToTable("ISSUES_LIST_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.MD_Document.MDDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("DocumentDescription")
                        .HasColumnName("DOCUMENT_DESCRIPTION");

                    b.Property<string>("DocumentName")
                        .HasColumnName("DOCUMENT_NAME");

                    b.Property<string>("DocumentStatus")
                        .HasColumnName("DOCUMENT_STATUS");

                    b.Property<bool>("IsMandatory")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IS_MANDATORY")
                        .HasDefaultValue(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 70, DateTimeKind.Local).AddTicks(4370));

                    b.HasKey("Id")
                        .HasName("MD_DOCUMENT_ID");

                    b.ToTable("MD_DOCUMENT_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.MD_Form.MDForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("FormName")
                        .HasColumnName("FORM_NAME");

                    b.Property<string>("FormStatus")
                        .HasColumnName("FORM_STATUS");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 66, DateTimeKind.Local).AddTicks(4480));

                    b.HasKey("Id")
                        .HasName("MD_FORM_ID");

                    b.ToTable("MD_FORM_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.New_Claim.Claim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalClaim")
                        .HasColumnName("ADDITIONAL_CLAIM");

                    b.Property<int>("BenefitYearBeginning")
                        .HasColumnName("BENEFIT_YEAR_BEGINNING");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<string>("CurrentStage")
                        .HasColumnName("CURRENT_STAGE");

                    b.Property<DateTime?>("DateMailedToEDD")
                        .HasColumnName("DATE_MAILED_TO_EDD");

                    b.Property<DateTime?>("EffectiveDateOfClaim")
                        .HasColumnName("EFFECTIVE_DATE_OF_CLAIM");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnName("EMPLOYEE_NUMBER");

                    b.Property<string>("Gender")
                        .HasColumnName("GENDER");

                    b.Property<DateTime?>("LastDateWorked")
                        .HasColumnName("LAST_DATE_WORKED");

                    b.Property<DateTime?>("MailDate")
                        .HasColumnName("MAIL_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 60, DateTimeKind.Local).AddTicks(1917));

                    b.Property<string>("NewClaim")
                        .HasColumnName("NEW_CLAIM");

                    b.Property<string>("ReasonForSeparation")
                        .HasColumnName("REASON_FOR_SEPARATION");

                    b.Property<string>("RequestNumber")
                        .HasColumnName("REQUEST_NUMBER");

                    b.Property<string>("RequestTitle")
                        .HasColumnName("REQUEST_TITLE");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.Property<string>("Type")
                        .HasColumnName("TYPE");

                    b.HasKey("Id")
                        .HasName("CLAIM_ID");

                    b.ToTable("CLAIM_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Questions.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<long>("FormId")
                        .HasColumnName("FORM_ID");

                    b.Property<string>("LAUSDQuestions")
                        .HasColumnName("LAUSD_QUESTIONS");

                    b.Property<string>("LAUSDResponses")
                        .HasColumnName("LAUSD_RESPONSES");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 100, DateTimeKind.Local).AddTicks(8568));

                    b.HasKey("Id")
                        .HasName("QUESTIONS_ID");

                    b.HasIndex("FormId");

                    b.ToTable("QUESTIONS_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Response_to_Employer.ResponseToEmployer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BenefitYearBeganDate")
                        .HasColumnName("BENEFIT_YEAR_BEGAN_DATE");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<DateTime?>("DateMailed")
                        .HasColumnName("DATE_MAILED");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("FormPath")
                        .HasColumnName("FORM_PATH");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 119, DateTimeKind.Local).AddTicks(9552));

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.HasKey("Id")
                        .HasName("RESPONSE_TO_EMPLOYER_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("RESPONSE_TO_EMPLOYER_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 44, DateTimeKind.Local).AddTicks(5818));

                    b.Property<long?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<long>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 45, DateTimeKind.Local).AddTicks(4326));

                    b.Property<long?>("ModifierId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("Title");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(3);

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ModifierId");

                    b.ToTable("SCHEDULE_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Profession");

                    b.HasKey("Id");

                    b.ToTable("USER_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Wages_After_Appeal.WagesAfterAppeal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseNumber")
                        .HasColumnName("CASE_NUMBER");

                    b.Property<long>("ClaimId")
                        .HasColumnName("CLAIM_ID");

                    b.Property<string>("ClaimantName")
                        .HasColumnName("CLAIMANT_NAME");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("CREATED_ON");

                    b.Property<DateTime?>("DeadLineDate")
                        .HasColumnName("DEADLINE_DATE");

                    b.Property<string>("FaxNumber")
                        .HasColumnName("FAX_NUMBER");

                    b.Property<string>("FormCode")
                        .HasColumnName("FORM_CODE");

                    b.Property<string>("FormPath")
                        .HasColumnName("FORM_PATH");

                    b.Property<DateTime?>("MailingDate")
                        .HasColumnName("MAILING_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODIFIED_ON")
                        .HasDefaultValue(new DateTime(2020, 3, 6, 18, 42, 58, 195, DateTimeKind.Local).AddTicks(2343));

                    b.Property<string>("PreparerName")
                        .HasColumnName("PREPARER_NAME");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnName("TELEPHONE_NUMBER");

                    b.HasKey("Id")
                        .HasName("WAGES_AFTER_APPEAL_ID");

                    b.HasIndex("ClaimId")
                        .IsUnique();

                    b.ToTable("WAGES_AFTER_APPEAL_TBL");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.ALJ_Decision.ALJDecision", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("ALJdecision")
                        .HasForeignKey("UICMA.Domain.Entities.ALJ_Decision.ALJDecision", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Additional_Information.AdditionalInformation", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("additionalInformation")
                        .HasForeignKey("UICMA.Domain.Entities.Additional_Information.AdditionalInformation", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Associated_Documents.AssociatedDocuments", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.MD_Document.MDDocument", "MDDocument")
                        .WithMany("AssociatedDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UICMA.Domain.Entities.MD_Form.MDForm", "MDForms")
                        .WithMany("AssociatedDocuments")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Attendee", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.Schedule", "Schedule")
                        .WithMany("Attendees")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UICMA.Domain.Entities.User", "User")
                        .WithMany("SchedulesAttended")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.CUIAB_Acknowledgement.CUIABAcknowledgement", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("acknowledgement")
                        .HasForeignKey("UICMA.Domain.Entities.CUIAB_Acknowledgement.CUIABAcknowledgement", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Appeal.ClaimAppeal", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("claimAppeal")
                        .HasForeignKey("UICMA.Domain.Entities.Claim_Appeal.ClaimAppeal", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Determination.ClaimDetermination", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("claimDetermination")
                        .HasForeignKey("UICMA.Domain.Entities.Claim_Determination.ClaimDetermination", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Interview.ClaimInterview", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("claimInterview")
                        .HasForeignKey("UICMA.Domain.Entities.Claim_Interview.ClaimInterview", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Claim_Response.ClaimResponse", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("claimResponse")
                        .HasForeignKey("UICMA.Domain.Entities.Claim_Response.ClaimResponse", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Form_Document.FormDocument", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.MD_Document.MDDocument", "MDDocument")
                        .WithMany("FormDocuments")
                        .HasForeignKey("MDDocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UICMA.Domain.Entities.MD_Form.MDForm", "MDForm")
                        .WithMany("FormDocuments")
                        .HasForeignKey("MDFormId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Questions.Question", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.Claim_Interview.ClaimInterview", "claimInterview")
                        .WithMany("questions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Response_to_Employer.ResponseToEmployer", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("responsetoEmployer")
                        .HasForeignKey("UICMA.Domain.Entities.Response_to_Employer.ResponseToEmployer", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.User", "Creator")
                        .WithMany("SchedulesCreated")
                        .HasForeignKey("CreatorId");

                    b.HasOne("UICMA.Domain.Entities.User", "Modifier")
                        .WithMany()
                        .HasForeignKey("ModifierId");
                });

            modelBuilder.Entity("UICMA.Domain.Entities.Wages_After_Appeal.WagesAfterAppeal", b =>
                {
                    b.HasOne("UICMA.Domain.Entities.New_Claim.Claim", "claim")
                        .WithOne("wagesAfterAppeal")
                        .HasForeignKey("UICMA.Domain.Entities.Wages_After_Appeal.WagesAfterAppeal", "ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
